if (window.FormValidation = { AddOn: {}, Framework: {}, I18n: {}, Validator: {} }, "undefined" == typeof jQuery) throw new Error("FormValidation requires jQuery"); !function (t) { var e = t.fn.jquery.split(" ")[0].split("."); if (+e[0] < 2 && +e[1] < 9 || 1 === +e[0] && 9 === +e[1] && +e[2] < 1) throw new Error("FormValidation requires jQuery version 1.9.1 or higher") }(jQuery), function (t) {
    FormValidation.Base = function (e, i, a) { this.$form = t(e), this.options = t.extend({}, t.fn.formValidation.DEFAULT_OPTIONS, i), this._namespace = a || "fv", this.$invalidFields = t([]), this.$submitButton = null, this.$hiddenButton = null, this.STATUS_NOT_VALIDATED = "NOT_VALIDATED", this.STATUS_VALIDATING = "VALIDATING", this.STATUS_INVALID = "INVALID", this.STATUS_VALID = "VALID", this.STATUS_IGNORED = "IGNORED", this.DEFAULT_MESSAGE = t.fn.formValidation.DEFAULT_MESSAGE, this._ieVersion = function () { for (var t = 3, e = document.createElement("div"), i = e.all || []; e.innerHTML = "<!--[if gt IE " + ++t + "]><br><![endif]-->", i[0];); return t > 4 ? t : document.documentMode }(); var s = document.createElement("div"); this._changeEvent = 9 !== this._ieVersion && "oninput" in s ? "input" : "keyup", this._submitIfValid = null, this._cacheFields = {}, this._init() }, FormValidation.Base.prototype = {
        constructor: FormValidation.Base, _exceedThreshold: function (e) { var i = this._namespace, a = e.attr("data-" + i + "-field"), s = this.options.fields[a].threshold || this.options.threshold; if (!s) return !0; var n = -1 !== t.inArray(e.attr("type"), ["button", "checkbox", "file", "hidden", "image", "radio", "reset", "submit"]); return n || e.val().length >= s }, _init: function () { var e = this, i = this._namespace, a = { addOns: {}, autoFocus: this.$form.attr("data-" + i + "-autofocus"), button: { selector: this.$form.attr("data-" + i + "-button-selector") || this.$form.attr("data-" + i + "-submitbuttons"), disabled: this.$form.attr("data-" + i + "-button-disabled") }, control: { valid: this.$form.attr("data-" + i + "-control-valid"), invalid: this.$form.attr("data-" + i + "-control-invalid") }, err: { clazz: this.$form.attr("data-" + i + "-err-clazz"), container: this.$form.attr("data-" + i + "-err-container") || this.$form.attr("data-" + i + "-container"), parent: this.$form.attr("data-" + i + "-err-parent") }, events: { formInit: this.$form.attr("data-" + i + "-events-form-init"), formPreValidate: this.$form.attr("data-" + i + "-events-form-prevalidate"), formError: this.$form.attr("data-" + i + "-events-form-error"), formReset: this.$form.attr("data-" + i + "-events-form-reset"), formSuccess: this.$form.attr("data-" + i + "-events-form-success"), fieldAdded: this.$form.attr("data-" + i + "-events-field-added"), fieldRemoved: this.$form.attr("data-" + i + "-events-field-removed"), fieldInit: this.$form.attr("data-" + i + "-events-field-init"), fieldError: this.$form.attr("data-" + i + "-events-field-error"), fieldReset: this.$form.attr("data-" + i + "-events-field-reset"), fieldSuccess: this.$form.attr("data-" + i + "-events-field-success"), fieldStatus: this.$form.attr("data-" + i + "-events-field-status"), localeChanged: this.$form.attr("data-" + i + "-events-locale-changed"), validatorError: this.$form.attr("data-" + i + "-events-validator-error"), validatorSuccess: this.$form.attr("data-" + i + "-events-validator-success"), validatorIgnored: this.$form.attr("data-" + i + "-events-validator-ignored") }, excluded: this.$form.attr("data-" + i + "-excluded"), icon: { valid: this.$form.attr("data-" + i + "-icon-valid") || this.$form.attr("data-" + i + "-feedbackicons-valid"), invalid: this.$form.attr("data-" + i + "-icon-invalid") || this.$form.attr("data-" + i + "-feedbackicons-invalid"), validating: this.$form.attr("data-" + i + "-icon-validating") || this.$form.attr("data-" + i + "-feedbackicons-validating"), feedback: this.$form.attr("data-" + i + "-icon-feedback") }, live: this.$form.attr("data-" + i + "-live"), locale: this.$form.attr("data-" + i + "-locale"), message: this.$form.attr("data-" + i + "-message"), onPreValidate: this.$form.attr("data-" + i + "-onprevalidate"), onError: this.$form.attr("data-" + i + "-onerror"), onReset: this.$form.attr("data-" + i + "-onreset"), onSuccess: this.$form.attr("data-" + i + "-onsuccess"), row: { selector: this.$form.attr("data-" + i + "-row-selector") || this.$form.attr("data-" + i + "-group"), valid: this.$form.attr("data-" + i + "-row-valid"), invalid: this.$form.attr("data-" + i + "-row-invalid"), feedback: this.$form.attr("data-" + i + "-row-feedback") }, threshold: this.$form.attr("data-" + i + "-threshold"), trigger: this.$form.attr("data-" + i + "-trigger"), verbose: this.$form.attr("data-" + i + "-verbose"), fields: {} }; this.$form.attr("novalidate", "novalidate").addClass(this.options.elementClass).on("submit." + i, function (t) { t.preventDefault(), e.validate() }).on("click." + i, this.options.button.selector, function () { e.$submitButton = t(this), e._submitIfValid = !0 }), (this.options.declarative === !0 || "true" === this.options.declarative) && this.$form.find("[name], [data-" + i + "-field]").each(function () { var s = t(this), n = s.attr("name") || s.attr("data-" + i + "-field"), r = e._parseOptions(s); r && (s.attr("data-" + i + "-field", n), a.fields[n] = t.extend({}, r, a.fields[n])) }), this.options = t.extend(!0, this.options, a), "string" == typeof this.options.err.parent && (this.options.err.parent = new RegExp(this.options.err.parent)), this.options.container && (this.options.err.container = this.options.container, delete this.options.container), this.options.feedbackIcons && (this.options.icon = t.extend(!0, this.options.icon, this.options.feedbackIcons), delete this.options.feedbackIcons), this.options.group && (this.options.row.selector = this.options.group, delete this.options.group), this.options.submitButtons && (this.options.button.selector = this.options.submitButtons, delete this.options.submitButtons), FormValidation.I18n[this.options.locale] || (this.options.locale = t.fn.formValidation.DEFAULT_OPTIONS.locale), (this.options.declarative === !0 || "true" === this.options.declarative) && (this.options = t.extend(!0, this.options, { addOns: this._parseAddOnOptions() })), this.$hiddenButton = t("<button/>").attr("type", "submit").prependTo(this.$form).addClass("fv-hidden-submit").css({ display: "none", width: 0, height: 0 }), this.$form.on("click." + this._namespace, '[type="submit"]', function (i) { if (!i.isDefaultPrevented()) { var a = t(i.target), s = a.is('[type="submit"]') ? a.eq(0) : a.parent('[type="submit"]').eq(0); !e.options.button.selector || s.is(e.options.button.selector) || s.is(e.$hiddenButton) || e.$form.off("submit." + e._namespace).submit() } }); for (var s in this.options.fields) this._initField(s); for (var n in this.options.addOns) "function" == typeof FormValidation.AddOn[n].init && FormValidation.AddOn[n].init(this, this.options.addOns[n]); this.$form.trigger(t.Event(this.options.events.formInit), { bv: this, fv: this, options: this.options }), this.options.onPreValidate && this.$form.on(this.options.events.formPreValidate, function (t) { FormValidation.Helper.call(e.options.onPreValidate, [t]) }), this.options.onSuccess && this.$form.on(this.options.events.formSuccess, function (t) { FormValidation.Helper.call(e.options.onSuccess, [t]) }), this.options.onError && this.$form.on(this.options.events.formError, function (t) { FormValidation.Helper.call(e.options.onError, [t]) }), this.options.onReset && this.$form.on(this.options.events.formReset, function (t) { FormValidation.Helper.call(e.options.onReset, [t]) }) }, _initField: function (e) { var i = this._namespace, a = t([]); switch (typeof e) { case "object": a = e, e = e.attr("data-" + i + "-field"); break; case "string": a = this.getFieldElements(e), a.attr("data-" + i + "-field", e) } if (0 !== a.length && null !== this.options.fields[e] && null !== this.options.fields[e].validators) { var s, n, r = this.options.fields[e].validators; for (s in r) n = r[s].alias || s, FormValidation.Validator[n] || delete this.options.fields[e].validators[s]; null === this.options.fields[e].enabled && (this.options.fields[e].enabled = !0); for (var o = this, l = a.length, d = a.attr("type"), f = 1 === l || "radio" === d || "checkbox" === d, u = this._getFieldTrigger(a.eq(0)), h = this.options.err.clazz.split(" ").join("."), m = t.map(u, function (t) { return t + ".update." + i }).join(" "), c = 0; l > c; c++) { var p = a.eq(c), v = this.options.fields[e].row || this.options.row.selector, g = p.closest(v), b = "function" == typeof (this.options.fields[e].container || this.options.fields[e].err || this.options.err.container) ? (this.options.fields[e].container || this.options.fields[e].err || this.options.err.container).call(this, p, this) : this.options.fields[e].container || this.options.fields[e].err || this.options.err.container, V = b && "tooltip" !== b && "popover" !== b ? t(b) : this._getMessageContainer(p, v); b && "tooltip" !== b && "popover" !== b && V.addClass(this.options.err.clazz), V.find("." + h + "[data-" + i + "-validator][data-" + i + '-for="' + e + '"]').remove(), g.find("i[data-" + i + '-icon-for="' + e + '"]').remove(), p.off(m).on(m, function () { o.updateStatus(t(this), o.STATUS_NOT_VALIDATED) }), p.data(i + ".messages", V); for (s in r) p.data(i + ".result." + s, this.STATUS_NOT_VALIDATED), f && c !== l - 1 || t("<small/>").css("display", "none").addClass(this.options.err.clazz).attr("data-" + i + "-validator", s).attr("data-" + i + "-for", e).attr("data-" + i + "-result", this.STATUS_NOT_VALIDATED).html(this._getMessage(e, s)).appendTo(V), n = r[s].alias || s, "function" == typeof FormValidation.Validator[n].init && FormValidation.Validator[n].init(this, p, this.options.fields[e].validators[s], s); if (this.options.fields[e].icon !== !1 && "false" !== this.options.fields[e].icon && this.options.icon && this.options.icon.valid && this.options.icon.invalid && this.options.icon.validating && (!f || c === l - 1)) { g.addClass(this.options.row.feedback); var F = t("<i/>").css("display", "none").addClass(this.options.icon.feedback).attr("data-" + i + "-icon-for", e).insertAfter(p); (f ? a : p).data(i + ".icon", F), ("tooltip" === b || "popover" === b) && ((f ? a : p).on(this.options.events.fieldError, function () { g.addClass("fv-has-tooltip") }).on(this.options.events.fieldSuccess, function () { g.removeClass("fv-has-tooltip") }), p.off("focus.container." + i).on("focus.container." + i, function () { o._showTooltip(t(this), b) }).off("blur.container." + i).on("blur.container." + i, function () { o._hideTooltip(t(this), b) })), "string" == typeof this.options.fields[e].icon && "true" !== this.options.fields[e].icon ? F.appendTo(t(this.options.fields[e].icon)) : this._fixIcon(p, F) } } var y = []; for (s in r) n = r[s].alias || s, r[s].priority = parseInt(r[s].priority || FormValidation.Validator[n].priority || 1, 10), y.push({ validator: s, priority: r[s].priority }); y = y.sort(function (t, e) { return t.priority - e.priority }), a.data(i + ".validators", y).on(this.options.events.fieldSuccess, function (t, e) { var i = o.getOptions(e.field, null, "onSuccess"); i && FormValidation.Helper.call(i, [t, e]) }).on(this.options.events.fieldError, function (t, e) { var i = o.getOptions(e.field, null, "onError"); i && FormValidation.Helper.call(i, [t, e]) }).on(this.options.events.fieldReset, function (t, e) { var i = o.getOptions(e.field, null, "onReset"); i && FormValidation.Helper.call(i, [t, e]) }).on(this.options.events.fieldStatus, function (t, e) { var i = o.getOptions(e.field, null, "onStatus"); i && FormValidation.Helper.call(i, [t, e]) }).on(this.options.events.validatorError, function (t, e) { var i = o.getOptions(e.field, e.validator, "onError"); i && FormValidation.Helper.call(i, [t, e]) }).on(this.options.events.validatorIgnored, function (t, e) { var i = o.getOptions(e.field, e.validator, "onIgnored"); i && FormValidation.Helper.call(i, [t, e]) }).on(this.options.events.validatorSuccess, function (t, e) { var i = o.getOptions(e.field, e.validator, "onSuccess"); i && FormValidation.Helper.call(i, [t, e]) }), this.onLiveChange(a, "live", function () { o._exceedThreshold(t(this)) && o.validateField(t(this)) }), a.trigger(t.Event(this.options.events.fieldInit), { bv: this, fv: this, field: e, element: a }) } }, _isExcluded: function (e) { var i = this._namespace, a = e.attr("data-" + i + "-excluded"), s = e.attr("data-" + i + "-field") || e.attr("name"); switch (!0) { case !!s && this.options.fields && this.options.fields[s] && ("true" === this.options.fields[s].excluded || this.options.fields[s].excluded === !0): case "true" === a: case "" === a: return !0; case !!s && this.options.fields && this.options.fields[s] && ("false" === this.options.fields[s].excluded || this.options.fields[s].excluded === !1): case "false" === a: return !1; case !!s && this.options.fields && this.options.fields[s] && "function" == typeof this.options.fields[s].excluded: return this.options.fields[s].excluded.call(this, e, this); case !!s && this.options.fields && this.options.fields[s] && "string" == typeof this.options.fields[s].excluded: case a: return FormValidation.Helper.call(this.options.fields[s].excluded, [e, this]); default: if (this.options.excluded) { "string" == typeof this.options.excluded && (this.options.excluded = t.map(this.options.excluded.split(","), function (e) { return t.trim(e) })); for (var n = this.options.excluded.length, r = 0; n > r; r++) if ("string" == typeof this.options.excluded[r] && e.is(this.options.excluded[r]) || "function" == typeof this.options.excluded[r] && this.options.excluded[r].call(this, e, this) === !0) return !0 } return !1 } }, _getFieldTrigger: function (t) { var e = this._namespace, i = t.data(e + ".trigger"); if (i) return i; var a = t.attr("type"), s = t.attr("data-" + e + "-field"), n = "radio" === a || "checkbox" === a || "file" === a || "SELECT" === t.get(0).tagName ? "change" : this._ieVersion >= 10 && t.attr("placeholder") ? "keyup" : this._changeEvent; return i = ((this.options.fields[s] ? this.options.fields[s].trigger : null) || this.options.trigger || n).split(" "), t.data(e + ".trigger", i), i }, _getMessage: function (t, e) { if (!this.options.fields[t] || !this.options.fields[t].validators) return ""; var i = this.options.fields[t].validators, a = i[e] && i[e].alias ? i[e].alias : e; if (!FormValidation.Validator[a]) return ""; switch (!0) { case !!i[e].message: return i[e].message; case !!this.options.fields[t].message: return this.options.fields[t].message; case !!this.options.message: return this.options.message; case !!FormValidation.I18n[this.options.locale] && !!FormValidation.I18n[this.options.locale][a] && !!FormValidation.I18n[this.options.locale][a]["default"]: return FormValidation.I18n[this.options.locale][a]["default"]; default: return this.DEFAULT_MESSAGE } }, _getMessageContainer: function (t, e) { if (!this.options.err.parent) throw new Error("The err.parent option is not defined"); var i = t.parent(); if (i.is(e)) return i; var a = i.attr("class"); return a && this.options.err.parent.test(a) ? i : this._getMessageContainer(i, e) }, _parseAddOnOptions: function () { var t = this._namespace, e = this.$form.attr("data-" + t + "-addons"), i = this.options.addOns || {}; if (e) { e = e.replace(/\s/g, "").split(","); for (var a = 0; a < e.length; a++) i[e[a]] || (i[e[a]] = {}) } var s, n, r, o; for (s in i) if (FormValidation.AddOn[s]) { if (n = FormValidation.AddOn[s].html5Attributes) for (r in n) o = this.$form.attr("data-" + t + "-addons-" + s.toLowerCase() + "-" + r.toLowerCase()), o && (i[s][n[r]] = o) } else delete i[s]; return i }, _parseOptions: function (e) { var i, a, s, n, r, o, l, d, f, u = this._namespace, h = e.attr("name") || e.attr("data-" + u + "-field"), m = {}, c = new RegExp("^data-" + u + "-([a-z]+)-alias$"), p = t.extend({}, FormValidation.Validator); t.each(e.get(0).attributes, function (t, e) { e.value && c.test(e.name) && (a = e.name.split("-")[2], p[e.value] && (p[a] = p[e.value], p[a].alias = e.value)) }); for (a in p) if (i = p[a], s = "data-" + u + "-" + a.toLowerCase(), n = e.attr(s) + "", f = "function" == typeof i.enableByHtml5 ? i.enableByHtml5(e) : null, f && "false" !== n || f !== !0 && ("" === n || "true" === n || s === n.toLowerCase())) { i.html5Attributes = t.extend({}, { message: "message", onerror: "onError", onreset: "onReset", onsuccess: "onSuccess", priority: "priority", transformer: "transformer" }, i.html5Attributes), m[a] = t.extend({}, f === !0 ? {} : f, m[a]), i.alias && (m[a].alias = i.alias); for (d in i.html5Attributes) r = i.html5Attributes[d], o = "data-" + u + "-" + a.toLowerCase() + "-" + d, l = e.attr(o), l && ("true" === l || o === l.toLowerCase() ? l = !0 : "false" === l && (l = !1), m[a][r] = l) } var v = { autoFocus: e.attr("data-" + u + "-autofocus"), err: e.attr("data-" + u + "-err-container") || e.attr("data-" + u + "-container"), enabled: e.attr("data-" + u + "-enabled"), excluded: e.attr("data-" + u + "-excluded"), icon: e.attr("data-" + u + "-icon") || e.attr("data-" + u + "-feedbackicons") || (this.options.fields && this.options.fields[h] ? this.options.fields[h].feedbackIcons : null), message: e.attr("data-" + u + "-message"), onError: e.attr("data-" + u + "-onerror"), onReset: e.attr("data-" + u + "-onreset"), onStatus: e.attr("data-" + u + "-onstatus"), onSuccess: e.attr("data-" + u + "-onsuccess"), row: e.attr("data-" + u + "-row") || e.attr("data-" + u + "-group") || (this.options.fields && this.options.fields[h] ? this.options.fields[h].group : null), selector: e.attr("data-" + u + "-selector"), threshold: e.attr("data-" + u + "-threshold"), transformer: e.attr("data-" + u + "-transformer"), trigger: e.attr("data-" + u + "-trigger"), verbose: e.attr("data-" + u + "-verbose"), validators: m }, g = t.isEmptyObject(v), b = t.isEmptyObject(m); return !b || !g && this.options.fields && this.options.fields[h] ? v : null }, _submit: function () { var e = this.isValid(); if (null !== e) { var i = e ? this.options.events.formSuccess : this.options.events.formError, a = t.Event(i); this.$form.trigger(a), this.$submitButton && (e ? this._onSuccess(a) : this._onError(a)) } }, _onError: function (e) { if (!e.isDefaultPrevented()) { if ("submitted" === this.options.live) { this.options.live = "enabled"; var i = this; for (var a in this.options.fields) !function (e) { var a = i.getFieldElements(e); a.length && i.onLiveChange(a, "live", function () { i._exceedThreshold(t(this)) && i.validateField(t(this)) }) }(a) } for (var s = this._namespace, n = 0; n < this.$invalidFields.length; n++) { var r = this.$invalidFields.eq(n), o = this.isOptionEnabled(r.attr("data-" + s + "-field"), "autoFocus"); if (o) { r.focus(); break } } } }, _onFieldValidated: function (e, i) { var a = this._namespace, s = e.attr("data-" + a + "-field"), n = this.options.fields[s].validators, r = {}, o = 0, l = { bv: this, fv: this, field: s, element: e, validator: i, result: e.data(a + ".response." + i) }; if (i) switch (e.data(a + ".result." + i)) { case this.STATUS_INVALID: e.trigger(t.Event(this.options.events.validatorError), l); break; case this.STATUS_VALID: e.trigger(t.Event(this.options.events.validatorSuccess), l); break; case this.STATUS_IGNORED: e.trigger(t.Event(this.options.events.validatorIgnored), l) } r[this.STATUS_NOT_VALIDATED] = 0, r[this.STATUS_VALIDATING] = 0, r[this.STATUS_INVALID] = 0, r[this.STATUS_VALID] = 0, r[this.STATUS_IGNORED] = 0; for (var d in n) if (n[d].enabled !== !1) { o++; var f = e.data(a + ".result." + d); f && r[f]++ } r[this.STATUS_VALID] + r[this.STATUS_IGNORED] === o ? (this.$invalidFields = this.$invalidFields.not(e), e.trigger(t.Event(this.options.events.fieldSuccess), l)) : (0 === r[this.STATUS_NOT_VALIDATED] || !this.isOptionEnabled(s, "verbose")) && 0 === r[this.STATUS_VALIDATING] && r[this.STATUS_INVALID] > 0 && (this.$invalidFields = this.$invalidFields.add(e), e.trigger(t.Event(this.options.events.fieldError), l)) }, _onSuccess: function (t) { t.isDefaultPrevented() || this.disableSubmitButtons(!0).defaultSubmit() }, _fixIcon: function (t, e) { }, _createTooltip: function (t, e, i) { }, _destroyTooltip: function (t, e) { }, _hideTooltip: function (t, e) { }, _showTooltip: function (t, e) { }, defaultSubmit: function () { var e = this._namespace; this.$submitButton && t("<input/>").attr({ type: "hidden", name: this.$submitButton.attr("name") }).attr("data-" + e + "-submit-hidden", "").val(this.$submitButton.val()).appendTo(this.$form), this.$form.off("submit." + e).submit() }, disableSubmitButtons: function (t) { return t ? "disabled" !== this.options.live && this.$form.find(this.options.button.selector).attr("disabled", "disabled").addClass(this.options.button.disabled) : this.$form.find(this.options.button.selector).removeAttr("disabled").removeClass(this.options.button.disabled), this }, getFieldElements: function (e) { if (!this._cacheFields[e]) if (this.options.fields[e] && this.options.fields[e].selector) { var i = this.$form.find(this.options.fields[e].selector); this._cacheFields[e] = i.length ? i : t(this.options.fields[e].selector) } else this._cacheFields[e] = this.$form.find('[name="' + e + '"]'); return this._cacheFields[e] }, getFieldValue: function (t, e) { var i, a = this._namespace; if ("string" == typeof t) { if (i = this.getFieldElements(t), 0 === i.length) return null } else i = t, t = i.attr("data-" + a + "-field"); if (!t || !this.options.fields[t]) return i.val(); var s = (this.options.fields[t].validators && this.options.fields[t].validators[e] ? this.options.fields[t].validators[e].transformer : null) || this.options.fields[t].transformer; return s ? FormValidation.Helper.call(s, [i, e, this]) : i.val() }, getNamespace: function () { return this._namespace }, getOptions: function (t, e, i) { var a = this._namespace; if (!t) return i ? this.options[i] : this.options; if ("object" == typeof t && (t = t.attr("data-" + a + "-field")), !this.options.fields[t]) return null; var s = this.options.fields[t]; return e ? s.validators && s.validators[e] ? i ? s.validators[e][i] : s.validators[e] : null : i ? s[i] : s }, getStatus: function (t, e) { var i = this._namespace; switch (typeof t) { case "object": return t.data(i + ".result." + e); case "string": default: return this.getFieldElements(t).eq(0).data(i + ".result." + e) } }, isOptionEnabled: function (t, e) { return !this.options.fields[t] || "true" !== this.options.fields[t][e] && this.options.fields[t][e] !== !0 ? !this.options.fields[t] || "false" !== this.options.fields[t][e] && this.options.fields[t][e] !== !1 ? "true" === this.options[e] || this.options[e] === !0 : !1 : !0 }, isValid: function () { for (var t in this.options.fields) { var e = this.isValidField(t); if (null === e) return null; if (e === !1) return !1 } return !0 }, isValidContainer: function (e) { var i = this, a = this._namespace, s = [], n = "string" == typeof e ? t(e) : e; if (0 === n.length) return !0; n.find("[data-" + a + "-field]").each(function () { var e = t(this); i._isExcluded(e) || s.push(e) }); for (var r = s.length, o = this.options.err.clazz.split(" ").join("."), l = 0; r > l; l++) { var d = s[l], f = d.attr("data-" + a + "-field"), u = d.data(a + ".messages").find("." + o + "[data-" + a + "-validator][data-" + a + '-for="' + f + '"]'); if (!this.options.fields || !this.options.fields[f] || "false" !== this.options.fields[f].enabled && this.options.fields[f].enabled !== !1) { if (u.filter("[data-" + a + '-result="' + this.STATUS_INVALID + '"]').length > 0) return !1; if (u.filter("[data-" + a + '-result="' + this.STATUS_NOT_VALIDATED + '"]').length > 0 || u.filter("[data-" + a + '-result="' + this.STATUS_VALIDATING + '"]').length > 0) return null } } return !0 }, isValidField: function (e) { var i = this._namespace, a = t([]); switch (typeof e) { case "object": a = e, e = e.attr("data-" + i + "-field"); break; case "string": a = this.getFieldElements(e) } if (0 === a.length || !this.options.fields[e] || "false" === this.options.fields[e].enabled || this.options.fields[e].enabled === !1) return !0; for (var s, n, r, o = a.attr("type"), l = "radio" === o || "checkbox" === o ? 1 : a.length, d = 0; l > d; d++) if (s = a.eq(d), !this._isExcluded(s)) for (n in this.options.fields[e].validators) if (this.options.fields[e].validators[n].enabled !== !1) { if (r = s.data(i + ".result." + n), r === this.STATUS_VALIDATING || r === this.STATUS_NOT_VALIDATED) return null; if (r === this.STATUS_INVALID) return !1 } return !0 }, offLiveChange: function (e, i) { if (null === e || 0 === e.length) return this; var a = this._namespace, s = this._getFieldTrigger(e.eq(0)), n = t.map(s, function (t) { return t + "." + i + "." + a }).join(" "); return e.off(n), this }, onLiveChange: function (e, i, a) { if (null === e || 0 === e.length) return this; var s = this._namespace, n = this._getFieldTrigger(e.eq(0)), r = t.map(n, function (t) { return t + "." + i + "." + s }).join(" "); switch (this.options.live) { case "submitted": break; case "disabled": e.off(r); break; case "enabled": default: e.off(r).on(r, function (t) { a.apply(this, arguments) }) } return this }, updateMessage: function (e, i, a) { var s = this._namespace, n = t([]); switch (typeof e) { case "object": n = e, e = e.attr("data-" + s + "-field"); break; case "string": n = this.getFieldElements(e) } var r = this.options.err.clazz.split(" ").join("."); return n.each(function () { t(this).data(s + ".messages").find("." + r + "[data-" + s + '-validator="' + i + '"][data-' + s + '-for="' + e + '"]').html(a) }), this }, updateStatus: function (e, i, a) { var s = this._namespace, n = t([]); switch (typeof e) { case "object": n = e, e = e.attr("data-" + s + "-field"); break; case "string": n = this.getFieldElements(e) } if (!e || !this.options.fields[e]) return this; i === this.STATUS_NOT_VALIDATED && (this._submitIfValid = !1); for (var r = this, o = n.attr("type"), l = this.options.fields[e].row || this.options.row.selector, d = "radio" === o || "checkbox" === o ? 1 : n.length, f = this.options.err.clazz.split(" ").join("."), u = 0; d > u; u++) { var h = n.eq(u); if (!this._isExcluded(h)) { var m, c, p = h.closest(l), v = h.data(s + ".messages"), g = v.find("." + f + "[data-" + s + "-validator][data-" + s + '-for="' + e + '"]'), b = a ? g.filter("[data-" + s + '-validator="' + a + '"]') : g, V = h.data(s + ".icon"), F = "function" == typeof (this.options.fields[e].container || this.options.fields[e].err || this.options.err.container) ? (this.options.fields[e].container || this.options.fields[e].err || this.options.err.container).call(this, h, this) : this.options.fields[e].container || this.options.fields[e].err || this.options.err.container, y = null; if (a) h.data(s + ".result." + a, i); else for (var S in this.options.fields[e].validators) h.data(s + ".result." + S, i); switch (b.attr("data-" + s + "-result", i), i) { case this.STATUS_VALIDATING: y = null, this.disableSubmitButtons(!0), h.removeClass(this.options.control.valid).removeClass(this.options.control.invalid), p.removeClass(this.options.row.valid).removeClass(this.options.row.invalid), V && V.removeClass(this.options.icon.valid).removeClass(this.options.icon.invalid).addClass(this.options.icon.validating).show(); break; case this.STATUS_INVALID: y = !1, this.disableSubmitButtons(!0), h.removeClass(this.options.control.valid).addClass(this.options.control.invalid), p.removeClass(this.options.row.valid).addClass(this.options.row.invalid), V && V.removeClass(this.options.icon.valid).removeClass(this.options.icon.validating).addClass(this.options.icon.invalid).show(); break; case this.STATUS_IGNORED: case this.STATUS_VALID: m = g.filter("[data-" + s + '-result="' + this.STATUS_VALIDATING + '"]').length > 0, c = g.filter("[data-" + s + '-result="' + this.STATUS_NOT_VALIDATED + '"]').length > 0; var _ = g.filter("[data-" + s + '-result="' + this.STATUS_IGNORED + '"]').length; y = m || c ? null : g.filter("[data-" + s + '-result="' + this.STATUS_VALID + '"]').length + _ === g.length, h.removeClass(this.options.control.valid).removeClass(this.options.control.invalid), y === !0 ? (this.disableSubmitButtons(this.isValid() === !1), i === this.STATUS_VALID && h.addClass(this.options.control.valid)) : y === !1 && (this.disableSubmitButtons(!0), i === this.STATUS_VALID && h.addClass(this.options.control.invalid)), V && (V.removeClass(this.options.icon.invalid).removeClass(this.options.icon.validating).removeClass(this.options.icon.valid), (i === this.STATUS_VALID || _ !== g.length) && V.addClass(m ? this.options.icon.validating : null === y ? "" : y ? this.options.icon.valid : this.options.icon.invalid).show()); var I = this.isValidContainer(p); null !== I && (p.removeClass(this.options.row.valid).removeClass(this.options.row.invalid), (i === this.STATUS_VALID || _ !== g.length) && p.addClass(I ? this.options.row.valid : this.options.row.invalid)); break; case this.STATUS_NOT_VALIDATED: default: y = null, this.disableSubmitButtons(!1), h.removeClass(this.options.control.valid).removeClass(this.options.control.invalid), p.removeClass(this.options.row.valid).removeClass(this.options.row.invalid), V && V.removeClass(this.options.icon.valid).removeClass(this.options.icon.invalid).removeClass(this.options.icon.validating).hide() } !V || "tooltip" !== F && "popover" !== F ? i === this.STATUS_INVALID ? b.show() : b.hide() : y === !1 ? this._createTooltip(h, g.filter("[data-" + s + '-result="' + r.STATUS_INVALID + '"]').eq(0).html(), F) : this._destroyTooltip(h, F), h.trigger(t.Event(this.options.events.fieldStatus), { bv: this, fv: this, field: e, element: h, status: i }), this._onFieldValidated(h, a) } } return this }, validate: function () { if (t.isEmptyObject(this.options.fields)) return this._submit(), this; this.$form.trigger(t.Event(this.options.events.formPreValidate)), this.disableSubmitButtons(!0), this._submitIfValid = !1; for (var e in this.options.fields) this.validateField(e); return this._submit(), this._submitIfValid = !0, this }, validateField: function (e) { var i = this._namespace, a = t([]); switch (typeof e) { case "object": a = e, e = e.attr("data-" + i + "-field"); break; case "string": a = this.getFieldElements(e) } if (0 === a.length || !this.options.fields[e] || "false" === this.options.fields[e].enabled || this.options.fields[e].enabled === !1) return this; for (var s, n, r, o = this, l = a.attr("type"), d = "radio" === l || "checkbox" === l ? 1 : a.length, f = "radio" === l || "checkbox" === l, u = this.options.fields[e].validators, h = this.isOptionEnabled(e, "verbose"), m = 0; d > m; m++) { var c = a.eq(m); if (!this._isExcluded(c)) for (var p = !1, v = c.data(i + ".validators"), g = v.length, b = 0; g > b && (s = v[b].validator, c.data(i + ".dfs." + s) && c.data(i + ".dfs." + s).reject(), !p) ; b++) { var V = c.data(i + ".result." + s); if (V !== this.STATUS_VALID && V !== this.STATUS_INVALID) if (u[s].enabled !== !1) if (c.data(i + ".result." + s, this.STATUS_VALIDATING), n = u[s].alias || s, r = FormValidation.Validator[n].validate(this, c, u[s], s), "object" == typeof r && r.resolve) this.updateStatus(f ? e : c, this.STATUS_VALIDATING, s), c.data(i + ".dfs." + s, r), r.done(function (t, e, a) { t.removeData(i + ".dfs." + e).data(i + ".response." + e, a), a.message && o.updateMessage(t, e, a.message), o.updateStatus(f ? t.attr("data-" + i + "-field") : t, a.valid === !0 ? o.STATUS_VALID : a.valid === !1 ? o.STATUS_INVALID : o.STATUS_IGNORED, e), a.valid && o._submitIfValid === !0 ? o._submit() : a.valid !== !1 || h || (p = !0) }); else if ("object" == typeof r && void 0 !== r.valid) { if (c.data(i + ".response." + s, r), r.message && this.updateMessage(f ? e : c, s, r.message), this.updateStatus(f ? e : c, r.valid === !0 ? this.STATUS_VALID : r.valid === !1 ? this.STATUS_INVALID : this.STATUS_IGNORED, s), r.valid === !1 && !h) break } else if ("boolean" == typeof r) { if (c.data(i + ".response." + s, r), this.updateStatus(f ? e : c, r ? this.STATUS_VALID : this.STATUS_INVALID, s), !r && !h) break } else null === r && (c.data(i + ".response." + s, r), this.updateStatus(f ? e : c, this.STATUS_IGNORED, s)); else this.updateStatus(f ? e : c, this.STATUS_IGNORED, s); else this._onFieldValidated(c, s) } } return this }, addField: function (e, i) { var a = this._namespace, s = t([]); switch (typeof e) { case "object": s = e, e = e.attr("data-" + a + "-field") || e.attr("name"); break; case "string": delete this._cacheFields[e], s = this.getFieldElements(e) } s.attr("data-" + a + "-field", e); for (var n = s.attr("type"), r = "radio" === n || "checkbox" === n ? 1 : s.length, o = 0; r > o; o++) { var l = s.eq(o), d = this._parseOptions(l); d = null === d ? i : t.extend(!0, d, i), this.options.fields[e] = t.extend(!0, this.options.fields[e], d), this._cacheFields[e] = this._cacheFields[e] ? this._cacheFields[e].add(l) : l, this._initField("checkbox" === n || "radio" === n ? e : l) } return this.disableSubmitButtons(!1), this.$form.trigger(t.Event(this.options.events.fieldAdded), { field: e, element: s, options: this.options.fields[e] }), this }, destroy: function () { var t, e, i, a, s, n, r, o, l = this._namespace; for (e in this.options.fields) for (i = this.getFieldElements(e), t = 0; t < i.length; t++) { a = i.eq(t); for (s in this.options.fields[e].validators) a.data(l + ".dfs." + s) && a.data(l + ".dfs." + s).reject(), a.removeData(l + ".result." + s).removeData(l + ".response." + s).removeData(l + ".dfs." + s), o = this.options.fields[e].validators[s].alias || s, "function" == typeof FormValidation.Validator[o].destroy && FormValidation.Validator[o].destroy(this, a, this.options.fields[e].validators[s], s) } var d = this.options.err.clazz.split(" ").join("."); for (e in this.options.fields) for (i = this.getFieldElements(e), r = this.options.fields[e].row || this.options.row.selector, t = 0; t < i.length; t++) { a = i.eq(t), a.data(l + ".messages").find("." + d + "[data-" + l + "-validator][data-" + l + '-for="' + e + '"]').remove().end().end().removeData(l + ".messages").removeData(l + ".validators").closest(r).removeClass(this.options.row.valid).removeClass(this.options.row.invalid).removeClass(this.options.row.feedback).end().off("." + l).removeAttr("data-" + l + "-field"); var f = "function" == typeof (this.options.fields[e].container || this.options.fields[e].err || this.options.err.container) ? (this.options.fields[e].container || this.options.fields[e].err || this.options.err.container).call(this, a, this) : this.options.fields[e].container || this.options.fields[e].err || this.options.err.container; ("tooltip" === f || "popover" === f) && this._destroyTooltip(a, f), n = a.data(l + ".icon"), n && n.remove(), a.removeData(l + ".icon").removeData(l + ".trigger") } for (var u in this.options.addOns) "function" == typeof FormValidation.AddOn[u].destroy && FormValidation.AddOn[u].destroy(this, this.options.addOns[u]); this.disableSubmitButtons(!1), this.$hiddenButton.remove(), this.$form.removeClass(this.options.elementClass).off("." + l).removeData("bootstrapValidator").removeData("formValidation").find("[data-" + l + "-submit-hidden]").remove().end().find('[type="submit"]').off("click." + l) }, enableFieldValidators: function (t, e, i) { var a = this.options.fields[t].validators; if (i && a && a[i] && a[i].enabled !== e) this.options.fields[t].validators[i].enabled = e, this.updateStatus(t, this.STATUS_NOT_VALIDATED, i); else if (!i && this.options.fields[t].enabled !== e) { this.options.fields[t].enabled = e; for (var s in a) this.enableFieldValidators(t, e, s) } return this }, getDynamicOption: function (t, e) { var i = "string" == typeof t ? this.getFieldElements(t) : t, a = i.val(); if ("function" == typeof e) return FormValidation.Helper.call(e, [a, this, i]); if ("string" == typeof e) { var s = this.getFieldElements(e); return s.length ? s.val() : FormValidation.Helper.call(e, [a, this, i]) || e } return null }, getForm: function () { return this.$form }, getInvalidFields: function () { return this.$invalidFields }, getLocale: function () {
            return this.options.locale
        }, getMessages: function (e, i) { var a = this, s = this._namespace, n = [], r = t([]); switch (!0) { case e && "object" == typeof e: r = e; break; case e && "string" == typeof e: var o = this.getFieldElements(e); if (o.length > 0) { var l = o.attr("type"); r = "radio" === l || "checkbox" === l ? o.eq(0) : o } break; default: r = this.$invalidFields } var d = i ? "[data-" + s + '-validator="' + i + '"]' : "", f = this.options.err.clazz.split(" ").join("."); return r.each(function () { n = n.concat(t(this).data(s + ".messages").find("." + f + "[data-" + s + '-for="' + t(this).attr("data-" + s + "-field") + '"][data-' + s + '-result="' + a.STATUS_INVALID + '"]' + d).map(function () { var e = t(this).attr("data-" + s + "-validator"), i = t(this).attr("data-" + s + "-for"); return a.options.fields[i].validators[e].enabled === !1 ? "" : t(this).html() }).get()) }), n }, getSubmitButton: function () { return this.$submitButton }, removeField: function (e) { var i = this._namespace, a = t([]); switch (typeof e) { case "object": a = e, e = e.attr("data-" + i + "-field") || e.attr("name"), a.attr("data-" + i + "-field", e); break; case "string": a = this.getFieldElements(e) } if (0 === a.length) return this; for (var s = a.attr("type"), n = "radio" === s || "checkbox" === s ? 1 : a.length, r = 0; n > r; r++) { var o = a.eq(r); this.$invalidFields = this.$invalidFields.not(o), this._cacheFields[e] = this._cacheFields[e].not(o) } return this._cacheFields[e] && 0 !== this._cacheFields[e].length || delete this.options.fields[e], ("checkbox" === s || "radio" === s) && this._initField(e), this.disableSubmitButtons(!1), this.$form.trigger(t.Event(this.options.events.fieldRemoved), { field: e, element: a }), this }, resetField: function (e, i) { var a = this._namespace, s = t([]); switch (typeof e) { case "object": s = e, e = e.attr("data-" + a + "-field"); break; case "string": s = this.getFieldElements(e) } var n = 0, r = s.length; if (this.options.fields[e]) for (n = 0; r > n; n++) for (var o in this.options.fields[e].validators) s.eq(n).removeData(a + ".dfs." + o); if (i) { var l = s.attr("type"); "radio" === l || "checkbox" === l ? s.prop("checked", !1).removeAttr("selected") : s.val("") } for (this.updateStatus(e, this.STATUS_NOT_VALIDATED), n = 0; r > n; n++) s.eq(n).trigger(t.Event(this.options.events.fieldReset), { fv: this, field: e, element: s.eq(n), resetValue: i }); return this }, resetForm: function (e) { for (var i in this.options.fields) this.resetField(i, e); return this.$invalidFields = t([]), this.$submitButton = null, this.disableSubmitButtons(!1), this.$form.trigger(t.Event(this.options.events.formReset), { fv: this, resetValue: e }), this }, revalidateField: function (t) { return this.updateStatus(t, this.STATUS_NOT_VALIDATED).validateField(t), this }, setLocale: function (e) { return this.options.locale = e, this.$form.trigger(t.Event(this.options.events.localeChanged), { locale: e, bv: this, fv: this }), this }, updateOption: function (t, e, i, a) { var s = this._namespace; return "object" == typeof t && (t = t.attr("data-" + s + "-field")), this.options.fields[t] && this.options.fields[t].validators[e] && (this.options.fields[t].validators[e][i] = a, this.updateStatus(t, this.STATUS_NOT_VALIDATED, e)), this }, validateContainer: function (e) { var i = this, a = this._namespace, s = [], n = "string" == typeof e ? t(e) : e; if (0 === n.length) return this; n.find("[data-" + a + "-field]").each(function () { var e = t(this); i._isExcluded(e) || s.push(e) }); for (var r = s.length, o = 0; r > o; o++) this.validateField(s[o]); return this }
    }, t.fn.formValidation = function (e) { var i = arguments; return this.each(function () { var a = t(this), s = a.data("formValidation"), n = "object" == typeof e && e; if (!s) { var r = (n.framework || a.attr("data-fv-framework") || "bootstrap").toLowerCase(), o = r.substr(0, 1).toUpperCase() + r.substr(1); if ("undefined" == typeof FormValidation.Framework[o]) throw new Error("The class FormValidation.Framework." + o + " is not implemented"); s = new FormValidation.Framework[o](this, n), a.addClass("fv-form-" + r).data("formValidation", s) } "string" == typeof e && s[e].apply(s, Array.prototype.slice.call(i, 1)) }) }, t.fn.formValidation.Constructor = FormValidation.Base, t.fn.formValidation.DEFAULT_MESSAGE = "This value is not valid", t.fn.formValidation.DEFAULT_OPTIONS = { autoFocus: !0, declarative: !0, elementClass: "fv-form", events: { formInit: "init.form.fv", formPreValidate: "prevalidate.form.fv", formError: "err.form.fv", formReset: "rst.form.fv", formSuccess: "success.form.fv", fieldAdded: "added.field.fv", fieldRemoved: "removed.field.fv", fieldInit: "init.field.fv", fieldError: "err.field.fv", fieldReset: "rst.field.fv", fieldSuccess: "success.field.fv", fieldStatus: "status.field.fv", localeChanged: "changed.locale.fv", validatorError: "err.validator.fv", validatorSuccess: "success.validator.fv", validatorIgnored: "ignored.validator.fv" }, excluded: [":disabled", ":hidden", ":not(:visible)"], fields: null, live: "enabled", locale: "en_US", message: null, threshold: null, verbose: !0, button: { selector: '[type="submit"]:not([formnovalidate])', disabled: "" }, control: { valid: "", invalid: "" }, err: { clazz: "", container: null, parent: null }, icon: { valid: null, invalid: null, validating: null, feedback: "" }, row: { selector: null, valid: "", invalid: "", feedback: "" } }
}(jQuery), function (t) { FormValidation.Helper = { call: function (t, e) { if ("function" == typeof t) return t.apply(this, e); if ("string" == typeof t) { "()" === t.substring(t.length - 2) && (t = t.substring(0, t.length - 2)); for (var i = t.split("."), a = i.pop(), s = window, n = 0; n < i.length; n++) s = s[i[n]]; return "undefined" == typeof s[a] ? null : s[a].apply(this, e) } }, date: function (t, e, i, a) { if (isNaN(t) || isNaN(e) || isNaN(i)) return !1; if (i.length > 2 || e.length > 2 || t.length > 4) return !1; if (i = parseInt(i, 10), e = parseInt(e, 10), t = parseInt(t, 10), 1e3 > t || t > 9999 || 0 >= e || e > 12) return !1; var s = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]; if ((t % 400 === 0 || t % 100 !== 0 && t % 4 === 0) && (s[1] = 29), 0 >= i || i > s[e - 1]) return !1; if (a === !0) { var n = new Date, r = n.getFullYear(), o = n.getMonth(), l = n.getDate(); return r > t || t === r && o > e - 1 || t === r && e - 1 === o && l > i } return !0 }, format: function (e, i) { t.isArray(i) || (i = [i]); for (var a in i) e = e.replace("%s", i[a]); return e }, luhn: function (t) { for (var e = t.length, i = 0, a = [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9], [0, 2, 4, 6, 8, 1, 3, 5, 7, 9]], s = 0; e--;) s += a[i][parseInt(t.charAt(e), 10)], i ^= 1; return s % 10 === 0 && s > 0 }, mod11And10: function (t) { for (var e = 5, i = t.length, a = 0; i > a; a++) e = (2 * (e || 10) % 11 + parseInt(t.charAt(a), 10)) % 10; return 1 === e }, mod37And36: function (t, e) { e = e || "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ"; for (var i = e.length, a = t.length, s = Math.floor(i / 2), n = 0; a > n; n++) s = (2 * (s || i) % (i + 1) + e.indexOf(t.charAt(n))) % i; return 1 === s } } }(jQuery), function (t) { FormValidation.I18n = t.extend(!0, FormValidation.I18n || {}, { en_US: { between: { "default": "Please enter a value between %s and %s", notInclusive: "Please enter a value between %s and %s strictly" } } }), FormValidation.Validator.between = { html5Attributes: { message: "message", min: "min", max: "max", inclusive: "inclusive" }, enableByHtml5: function (t) { return "range" === t.attr("type") ? { min: t.attr("min"), max: t.attr("max") } : !1 }, validate: function (e, i, a, s) { var n = e.getFieldValue(i, s); if ("" === n) return !0; n = this._format(n); var r = e.getLocale(), o = t.isNumeric(a.min) ? a.min : e.getDynamicOption(i, a.min), l = t.isNumeric(a.max) ? a.max : e.getDynamicOption(i, a.max), d = this._format(o), f = this._format(l); return a.inclusive === !0 || void 0 === a.inclusive ? { valid: t.isNumeric(n) && parseFloat(n) >= d && parseFloat(n) <= f, message: FormValidation.Helper.format(a.message || FormValidation.I18n[r].between["default"], [o, l]) } : { valid: t.isNumeric(n) && parseFloat(n) > d && parseFloat(n) < f, message: FormValidation.Helper.format(a.message || FormValidation.I18n[r].between.notInclusive, [o, l]) } }, _format: function (t) { return (t + "").replace(",", ".") } } }(jQuery), function (t) { FormValidation.I18n = t.extend(!0, FormValidation.I18n || {}, { en_US: { callback: { "default": "Please enter a valid value" } } }), FormValidation.Validator.callback = { priority: 999, html5Attributes: { message: "message", callback: "callback" }, validate: function (e, i, a, s) { var n = e.getFieldValue(i, s), r = new t.Deferred, o = { valid: !0 }; if (a.callback) { var l = FormValidation.Helper.call(a.callback, [n, e, i]); o = "boolean" == typeof l || null === l ? { valid: l } : l } return r.resolve(i, s, o), r } } }(jQuery), function (t) { FormValidation.I18n = t.extend(!0, FormValidation.I18n || {}, { en_US: { choicenet: { "default": "Please enter a valid value", less: "Please choose %s options at minimum", more: "Please choose %s options at maximum", between: "Please choose %s - %s options" } } }), FormValidation.Validator.choicenet = { html5Attributes: { message: "message", min: "min", max: "max" }, validate: function (e, i, a, s) { var n = e.getLocale(), r = (e.getNamespace(), 0), o = a.min ? t.isNumeric(a.min) ? a.min : e.getDynamicOption(i, a.min) : null, l = a.max ? t.isNumeric(a.max) ? a.max : e.getDynamicOption(i, a.max) : null, d = !0, f = a.message || FormValidation.I18n[n].choicenet["default"], u = i.data("fieldcid"); switch (r = i.parent().parent().find("[data-fieldcidalt='" + u + "']:checked").length, (o && r < parseInt(o, 10) || l && r > parseInt(l, 10)) && (d = !1), !0) { case !!o && !!l: f = FormValidation.Helper.format(a.message || FormValidation.I18n[n].choicenet.between, [parseInt(o, 10), parseInt(l, 10)]); break; case !!o: f = FormValidation.Helper.format(a.message || FormValidation.I18n[n].choicenet.less, parseInt(o, 10)); break; case !!l: f = FormValidation.Helper.format(a.message || FormValidation.I18n[n].choicenet.more, parseInt(l, 10)) } return { valid: d, message: f } } } }(jQuery), function (t) { FormValidation.I18n = t.extend(!0, FormValidation.I18n || {}, { en_US: { choice: { "default": "Please enter a valid value", less: "Please choose %s options at minimum", more: "Please choose %s options at maximum", between: "Please choose %s - %s options" } } }), FormValidation.Validator.choice = { html5Attributes: { message: "message", min: "min", max: "max" }, validate: function (e, i, a, s) { var n = e.getLocale(), r = e.getNamespace(), o = i.is("select") ? e.getFieldElements(i.attr("data-" + r + "-field")).find("option").filter(":selected").length : e.getFieldElements(i.attr("data-" + r + "-field")).filter(":checked").length, l = a.min ? t.isNumeric(a.min) ? a.min : e.getDynamicOption(i, a.min) : null, d = a.max ? t.isNumeric(a.max) ? a.max : e.getDynamicOption(i, a.max) : null, f = !0, u = a.message || FormValidation.I18n[n].choice["default"]; switch ((l && o < parseInt(l, 10) || d && o > parseInt(d, 10)) && (f = !1), !0) { case !!l && !!d: u = FormValidation.Helper.format(a.message || FormValidation.I18n[n].choice.between, [parseInt(l, 10), parseInt(d, 10)]); break; case !!l: u = FormValidation.Helper.format(a.message || FormValidation.I18n[n].choice.less, parseInt(l, 10)); break; case !!d: u = FormValidation.Helper.format(a.message || FormValidation.I18n[n].choice.more, parseInt(d, 10)) } return { valid: f, message: u } } } }(jQuery), function (t) { FormValidation.I18n = t.extend(!0, FormValidation.I18n || {}, { en_US: { color: { "default": "Please enter a valid color" } } }), FormValidation.Validator.color = { html5Attributes: { message: "message", type: "type" }, enableByHtml5: function (t) { return "color" === t.attr("type") }, SUPPORTED_TYPES: ["hex", "rgb", "rgba", "hsl", "hsla", "keyword"], KEYWORD_COLORS: ["aliceblue", "antiquewhite", "aqua", "aquamarine", "azure", "beige", "bisque", "black", "blanchedalmond", "blue", "blueviolet", "brown", "burlywood", "cadetblue", "chartreuse", "chocolate", "coral", "cornflowerblue", "cornsilk", "crimson", "cyan", "darkblue", "darkcyan", "darkgoldenrod", "darkgray", "darkgreen", "darkgrey", "darkkhaki", "darkmagenta", "darkolivegreen", "darkorange", "darkorchid", "darkred", "darksalmon", "darkseagreen", "darkslateblue", "darkslategray", "darkslategrey", "darkturquoise", "darkviolet", "deeppink", "deepskyblue", "dimgray", "dimgrey", "dodgerblue", "firebrick", "floralwhite", "forestgreen", "fuchsia", "gainsboro", "ghostwhite", "gold", "goldenrod", "gray", "green", "greenyellow", "grey", "honeydew", "hotpink", "indianred", "indigo", "ivory", "khaki", "lavender", "lavenderblush", "lawngreen", "lemonchiffon", "lightblue", "lightcoral", "lightcyan", "lightgoldenrodyellow", "lightgray", "lightgreen", "lightgrey", "lightpink", "lightsalmon", "lightseagreen", "lightskyblue", "lightslategray", "lightslategrey", "lightsteelblue", "lightyellow", "lime", "limegreen", "linen", "magenta", "maroon", "mediumaquamarine", "mediumblue", "mediumorchid", "mediumpurple", "mediumseagreen", "mediumslateblue", "mediumspringgreen", "mediumturquoise", "mediumvioletred", "midnightblue", "mintcream", "mistyrose", "moccasin", "navajowhite", "navy", "oldlace", "olive", "olivedrab", "orange", "orangered", "orchid", "palegoldenrod", "palegreen", "paleturquoise", "palevioletred", "papayawhip", "peachpuff", "peru", "pink", "plum", "powderblue", "purple", "red", "rosybrown", "royalblue", "saddlebrown", "salmon", "sandybrown", "seagreen", "seashell", "sienna", "silver", "skyblue", "slateblue", "slategray", "slategrey", "snow", "springgreen", "steelblue", "tan", "teal", "thistle", "tomato", "transparent", "turquoise", "violet", "wheat", "white", "whitesmoke", "yellow", "yellowgreen"], validate: function (e, i, a, s) { var n = e.getFieldValue(i, s); if ("" === n) return !0; if (this.enableByHtml5(i)) return /^#[0-9A-F]{6}$/i.test(n); var r = a.type || this.SUPPORTED_TYPES; t.isArray(r) || (r = r.replace(/s/g, "").split(",")); for (var o, l, d = !1, f = 0; f < r.length; f++) if (l = r[f], o = "_" + l.toLowerCase(), d = d || this[o](n)) return !0; return !1 }, _hex: function (t) { return /(^#[0-9A-F]{6}$)|(^#[0-9A-F]{3}$)/i.test(t) }, _hsl: function (t) { return /^hsl\((\s*(-?\d+)\s*,)(\s*(\b(0?\d{1,2}|100)\b%)\s*,)(\s*(\b(0?\d{1,2}|100)\b%)\s*)\)$/.test(t) }, _hsla: function (t) { return /^hsla\((\s*(-?\d+)\s*,)(\s*(\b(0?\d{1,2}|100)\b%)\s*,){2}(\s*(0?(\.\d+)?|1(\.0+)?)\s*)\)$/.test(t) }, _keyword: function (e) { return t.inArray(e, this.KEYWORD_COLORS) >= 0 }, _rgb: function (t) { var e = /^rgb\((\s*(\b([01]?\d{1,2}|2[0-4]\d|25[0-5])\b)\s*,){2}(\s*(\b([01]?\d{1,2}|2[0-4]\d|25[0-5])\b)\s*)\)$/, i = /^rgb\((\s*(\b(0?\d{1,2}|100)\b%)\s*,){2}(\s*(\b(0?\d{1,2}|100)\b%)\s*)\)$/; return e.test(t) || i.test(t) }, _rgba: function (t) { var e = /^rgba\((\s*(\b([01]?\d{1,2}|2[0-4]\d|25[0-5])\b)\s*,){3}(\s*(0?(\.\d+)?|1(\.0+)?)\s*)\)$/, i = /^rgba\((\s*(\b(0?\d{1,2}|100)\b%)\s*,){3}(\s*(0?(\.\d+)?|1(\.0+)?)\s*)\)$/; return e.test(t) || i.test(t) } } }(jQuery), function (t) { FormValidation.I18n = t.extend(!0, FormValidation.I18n || {}, { en_US: { creditCard: { "default": "Please enter a valid credit card number" } } }), FormValidation.Validator.creditCard = { validate: function (e, i, a, s) { var n = e.getFieldValue(i, s); if ("" === n) return !0; if (/[^0-9-\s]+/.test(n)) return !1; if (n = n.replace(/\D/g, ""), !FormValidation.Helper.luhn(n)) return !1; var r, o, l = { AMERICAN_EXPRESS: { length: [15], prefix: ["34", "37"] }, DINERS_CLUB: { length: [14], prefix: ["300", "301", "302", "303", "304", "305", "36"] }, DINERS_CLUB_US: { length: [16], prefix: ["54", "55"] }, DISCOVER: { length: [16], prefix: ["6011", "622126", "622127", "622128", "622129", "62213", "62214", "62215", "62216", "62217", "62218", "62219", "6222", "6223", "6224", "6225", "6226", "6227", "6228", "62290", "62291", "622920", "622921", "622922", "622923", "622924", "622925", "644", "645", "646", "647", "648", "649", "65"] }, JCB: { length: [16], prefix: ["3528", "3529", "353", "354", "355", "356", "357", "358"] }, LASER: { length: [16, 17, 18, 19], prefix: ["6304", "6706", "6771", "6709"] }, MAESTRO: { length: [12, 13, 14, 15, 16, 17, 18, 19], prefix: ["5018", "5020", "5038", "6304", "6759", "6761", "6762", "6763", "6764", "6765", "6766"] }, MASTERCARD: { length: [16], prefix: ["51", "52", "53", "54", "55"] }, SOLO: { length: [16, 18, 19], prefix: ["6334", "6767"] }, UNIONPAY: { length: [16, 17, 18, 19], prefix: ["622126", "622127", "622128", "622129", "62213", "62214", "62215", "62216", "62217", "62218", "62219", "6222", "6223", "6224", "6225", "6226", "6227", "6228", "62290", "62291", "622920", "622921", "622922", "622923", "622924", "622925"] }, VISA: { length: [16], prefix: ["4"] } }; for (r in l) for (o in l[r].prefix) if (n.substr(0, l[r].prefix[o].length) === l[r].prefix[o] && -1 !== t.inArray(n.length, l[r].length)) return { valid: !0, type: r }; return !1 } } }(jQuery), function (t) { FormValidation.I18n = t.extend(!0, FormValidation.I18n || {}, { en_US: { date: { "default": "Please enter a valid date", min: "Please enter a date after %s", max: "Please enter a date before %s", range: "Please enter a date in the range %s - %s" } } }), FormValidation.Validator.date = { html5Attributes: { message: "message", format: "format", min: "min", max: "max", separator: "separator" }, validate: function (e, i, a, s) { var n = e.getFieldValue(i, s); if ("" === n) return !0; a.format = a.format || "MM/DD/YYYY", "date" === i.attr("type") && (a.format = "YYYY-MM-DD"); var r = e.getLocale(), o = a.message || FormValidation.I18n[r].date["default"], l = a.format.split(" "), d = l[0], f = l.length > 1 ? l[1] : null, u = l.length > 2 ? l[2] : null, h = n.split(" "), m = h[0], c = h.length > 1 ? h[1] : null; if (l.length !== h.length) return { valid: !1, message: o }; var p = a.separator; if (p || (p = -1 !== m.indexOf("/") ? "/" : -1 !== m.indexOf("-") ? "-" : -1 !== m.indexOf(".") ? "." : null), null === p || -1 === m.indexOf(p)) return { valid: !1, message: o }; if (m = m.split(p), d = d.split(p), m.length !== d.length) return { valid: !1, message: o }; var v = m[t.inArray("YYYY", d)], g = m[t.inArray("MM", d)], b = m[t.inArray("DD", d)]; if (!v || !g || !b || 4 !== v.length) return { valid: !1, message: o }; var V = null, F = null, y = null; if (f) { if (f = f.split(":"), c = c.split(":"), f.length !== c.length) return { valid: !1, message: o }; if (F = c.length > 0 ? c[0] : null, V = c.length > 1 ? c[1] : null, y = c.length > 2 ? c[2] : null, "" === F || "" === V || "" === y) return { valid: !1, message: o }; if (y) { if (isNaN(y) || y.length > 2) return { valid: !1, message: o }; if (y = parseInt(y, 10), 0 > y || y > 60) return { valid: !1, message: o } } if (F) { if (isNaN(F) || F.length > 2) return { valid: !1, message: o }; if (F = parseInt(F, 10), 0 > F || F >= 24 || u && F > 12) return { valid: !1, message: o } } if (V) { if (isNaN(V) || V.length > 2) return { valid: !1, message: o }; if (V = parseInt(V, 10), 0 > V || V > 59) return { valid: !1, message: o } } } var S = FormValidation.Helper.date(v, g, b), _ = null, I = null, T = a.min, A = a.max; switch (T && (_ = T instanceof Date ? T : this._parseDate(T, d, p) || this._parseDate(e.getDynamicOption(i, T), d, p), T = this._formatDate(_, a.format)), A && (I = A instanceof Date ? A : this._parseDate(A, d, p) || this._parseDate(e.getDynamicOption(i, A), d, p), A = this._formatDate(I, a.format)), m = new Date(v, g - 1, b, F, V, y), !0) { case T && !A && S: S = m.getTime() >= _.getTime(), o = a.message || FormValidation.Helper.format(FormValidation.I18n[r].date.min, T); break; case A && !T && S: S = m.getTime() <= I.getTime(), o = a.message || FormValidation.Helper.format(FormValidation.I18n[r].date.max, A); break; case A && T && S: S = m.getTime() <= I.getTime() && m.getTime() >= _.getTime(), o = a.message || FormValidation.Helper.format(FormValidation.I18n[r].date.range, [T, A]) } return { valid: S, date: m, message: o } }, _parseDate: function (e, i, a) { if (e instanceof Date) return e; if ("string" != typeof e) return null; var s = t.inArray("YYYY", i), n = t.inArray("MM", i), r = t.inArray("DD", i); if (-1 === s || -1 === n || -1 === r) return null; var o = 0, l = 0, d = 0, f = e.split(" "), u = f[0].split(a); if (u.length < 3) return null; if (f.length > 1) { var h = f[1].split(":"); l = h.length > 0 ? h[0] : null, o = h.length > 1 ? h[1] : null, d = h.length > 2 ? h[2] : null } return new Date(u[s], u[n] - 1, u[r], l, o, d) }, _formatDate: function (t, e) { e = e.replace(/Y/g, "y").replace(/M/g, "m").replace(/D/g, "d").replace(/:m/g, ":M").replace(/:mm/g, ":MM").replace(/:S/, ":s").replace(/:SS/, ":ss"); var i = { d: function (t) { return t.getDate() }, dd: function (t) { var e = t.getDate(); return 10 > e ? "0" + e : e }, m: function (t) { return t.getMonth() + 1 }, mm: function (t) { var e = t.getMonth() + 1; return 10 > e ? "0" + e : e }, yy: function (t) { return ("" + t.getFullYear()).substr(2) }, yyyy: function (t) { return t.getFullYear() }, h: function (t) { return t.getHours() % 12 || 12 }, hh: function (t) { var e = t.getHours() % 12 || 12; return 10 > e ? "0" + e : e }, H: function (t) { return t.getHours() }, HH: function (t) { var e = t.getHours(); return 10 > e ? "0" + e : e }, M: function (t) { return t.getMinutes() }, MM: function (t) { var e = t.getMinutes(); return 10 > e ? "0" + e : e }, s: function (t) { return t.getSeconds() }, ss: function (t) { var e = t.getSeconds(); return 10 > e ? "0" + e : e } }; return e.replace(/d{1,4}|m{1,4}|yy(?:yy)?|([HhMs])\1?|"[^"]*"|'[^']*'/g, function (e) { return i[e] ? i[e](t) : e.slice(1, e.length - 1) }) } } }(jQuery), function (t) { FormValidation.I18n = t.extend(!0, FormValidation.I18n || {}, { en_US: { different: { "default": "Please enter a different value" } } }), FormValidation.Validator.different = { html5Attributes: { message: "message", field: "field" }, init: function (e, i, a, s) { for (var n = a.field.split(","), r = 0; r < n.length; r++) { var o = e.getFieldElements(t.trim(n[r])); e.onLiveChange(o, "live_" + s, function () { var t = e.getStatus(i, s); t !== e.STATUS_NOT_VALIDATED && e.revalidateField(i) }) } }, destroy: function (e, i, a, s) { for (var n = a.field.split(","), r = 0; r < n.length; r++) { var o = e.getFieldElements(t.trim(n[r])); e.offLiveChange(o, "live_" + s) } }, validate: function (e, i, a, s) { var n = e.getFieldValue(i, s); if ("" === n) return !0; for (var r = a.field.split(","), o = !0, l = 0; l < r.length; l++) { var d = e.getFieldElements(t.trim(r[l])); if (null != d && 0 !== d.length) { var f = e.getFieldValue(d, s); n === f ? o = !1 : "" !== f && e.updateStatus(d, e.STATUS_VALID, s) } } return o } } }(jQuery), function (t) { FormValidation.I18n = t.extend(!0, FormValidation.I18n || {}, { en_US: { digits: { "default": "Please enter only digits" } } }), FormValidation.Validator.digits = { validate: function (t, e, i, a) { var s = t.getFieldValue(e, a); return "" === s ? !0 : /^\d+$/.test(s) } } }(jQuery), function (t) { FormValidation.I18n = t.extend(!0, FormValidation.I18n || {}, { en_US: { emailAddress: { "default": "Please enter a valid email address" } } }), FormValidation.Validator.emailAddress = { html5Attributes: { message: "message", multiple: "multiple", separator: "separator" }, enableByHtml5: function (t) { return "email" === t.attr("type") }, validate: function (t, e, i, a) { var s = t.getFieldValue(e, a); if ("" === s) return !0; var n = /^(([^<>()[\]\\.,;:\s@\"]+(\.[^<>()[\]\\.,;:\s@\"]+)*)|(\".+\"))@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/, r = i.multiple === !0 || "true" === i.multiple; if (r) { for (var o = i.separator || /[,;]/, l = this._splitEmailAddresses(s, o), d = 0; d < l.length; d++) if (!n.test(l[d])) return !1; return !0 } return n.test(s) }, _splitEmailAddresses: function (t, e) { for (var i = t.split(/"/), a = i.length, s = [], n = "", r = 0; a > r; r++) if (r % 2 === 0) { var o = i[r].split(e), l = o.length; if (1 === l) n += o[0]; else { s.push(n + o[0]); for (var d = 1; l - 1 > d; d++) s.push(o[d]); n = o[l - 1] } } else n += '"' + i[r], a - 1 > r && (n += '"'); return s.push(n), s } } }(jQuery), function (t) { FormValidation.I18n = t.extend(!0, FormValidation.I18n || {}, { en_US: { file: { "default": "Please choose a valid file" } } }), FormValidation.Validator.file = { html5Attributes: { extension: "extension", maxfiles: "maxFiles", minfiles: "minFiles", maxsize: "maxSize", minsize: "minSize", maxtotalsize: "maxTotalSize", mintotalsize: "minTotalSize", message: "message", type: "type" }, validate: function (e, i, a, s) { var n = e.getFieldValue(i, s); if ("" === n) return !0; var r, o = a.extension ? a.extension.toLowerCase().split(",") : null, l = a.type ? a.type.toLowerCase().split(",") : null, d = window.File && window.FileList && window.FileReader; if (d) { var f = i.get(0).files, u = f.length, h = 0; if (a.maxFiles && u > parseInt(a.maxFiles, 10) || a.minFiles && u < parseInt(a.minFiles, 10)) return !1; for (var m = 0; u > m; m++) if (h += f[m].size, r = f[m].name.substr(f[m].name.lastIndexOf(".") + 1), a.minSize && f[m].size < parseInt(a.minSize, 10) || a.maxSize && f[m].size > parseInt(a.maxSize, 10) || o && -1 === t.inArray(r.toLowerCase(), o) || f[m].type && l && -1 === t.inArray(f[m].type.toLowerCase(), l)) return !1; if (a.maxTotalSize && h > parseInt(a.maxTotalSize, 10) || a.minTotalSize && h < parseInt(a.minTotalSize, 10)) return !1 } else if (r = n.substr(n.lastIndexOf(".") + 1), o && -1 === t.inArray(r.toLowerCase(), o)) return !1; return !0 } } }(jQuery), function (t) { FormValidation.I18n = t.extend(!0, FormValidation.I18n || {}, { en_US: { greaterThan: { "default": "Please enter a value greater than or equal to %s", notInclusive: "Please enter a value greater than %s" } } }), FormValidation.Validator.greaterThan = { html5Attributes: { message: "message", value: "value", inclusive: "inclusive" }, enableByHtml5: function (t) { var e = t.attr("type"), i = t.attr("min"); return i && "date" !== e ? { value: i } : !1 }, validate: function (e, i, a, s) { var n = e.getFieldValue(i, s); if ("" === n) return !0; n = this._format(n); var r = e.getLocale(), o = t.isNumeric(a.value) ? a.value : e.getDynamicOption(i, a.value), l = this._format(o); return a.inclusive === !0 || void 0 === a.inclusive ? { valid: t.isNumeric(n) && parseFloat(n) >= l, message: FormValidation.Helper.format(a.message || FormValidation.I18n[r].greaterThan["default"], o) } : { valid: t.isNumeric(n) && parseFloat(n) > l, message: FormValidation.Helper.format(a.message || FormValidation.I18n[r].greaterThan.notInclusive, o) } }, _format: function (t) { return (t + "").replace(",", ".") } } }(jQuery), function (t) { FormValidation.I18n = t.extend(!0, FormValidation.I18n || {}, { en_US: { identical: { "default": "Please enter the same value" } } }), FormValidation.Validator.identical = { html5Attributes: { message: "message", field: "field" }, init: function (t, e, i, a) { var s = t.getFieldElements(i.field); t.onLiveChange(s, "live_" + a, function () { var i = t.getStatus(e, a); i !== t.STATUS_NOT_VALIDATED && t.revalidateField(e) }) }, destroy: function (t, e, i, a) { var s = t.getFieldElements(i.field); t.offLiveChange(s, "live_" + a) }, validate: function (t, e, i, a) { var s = t.getFieldValue(e, a), n = t.getFieldElements(i.field); if (null === n || 0 === n.length) return !0; var r = t.getFieldValue(n, a); return s === r ? (t.updateStatus(n, t.STATUS_VALID, a), !0) : !1 } } }(jQuery), function (t) { FormValidation.I18n = t.extend(!0, FormValidation.I18n || {}, { en_US: { integer: { "default": "Please enter a valid number" } } }), FormValidation.Validator.integer = { html5Attributes: { message: "message", thousandsseparator: "thousandsSeparator", decimalseparator: "decimalSeparator" }, enableByHtml5: function (t) { return "number" === t.attr("type") && (void 0 === t.attr("step") || t.attr("step") % 1 === 0) }, validate: function (t, e, i, a) { if (this.enableByHtml5(e) && e.get(0).validity && e.get(0).validity.badInput === !0) return !1; var s = t.getFieldValue(e, a); if ("" === s) return !0; var n = i.decimalSeparator || ".", r = i.thousandsSeparator || ""; n = "." === n ? "\\." : n, r = "." === r ? "\\." : r; var o = new RegExp("^-?[0-9]{1,3}(" + r + "[0-9]{3})*(" + n + "[0-9]+)?$"), l = new RegExp(r, "g"); return o.test(s) ? (r && (s = s.replace(l, "")), n && (s = s.replace(n, ".")), isNaN(s) || !isFinite(s) ? !1 : (s = parseFloat(s), Math.floor(s) === s)) : !1 } } }(jQuery), function (t) { FormValidation.I18n = t.extend(!0, FormValidation.I18n || {}, { en_US: { lessThan: { "default": "Please enter a value less than or equal to %s", notInclusive: "Please enter a value less than %s" } } }), FormValidation.Validator.lessThan = { html5Attributes: { message: "message", value: "value", inclusive: "inclusive" }, enableByHtml5: function (t) { var e = t.attr("type"), i = t.attr("max"); return i && "date" !== e ? { value: i } : !1 }, validate: function (e, i, a, s) { var n = e.getFieldValue(i, s); if ("" === n) return !0; n = this._format(n); var r = e.getLocale(), o = t.isNumeric(a.value) ? a.value : e.getDynamicOption(i, a.value), l = this._format(o); return a.inclusive === !0 || void 0 === a.inclusive ? { valid: t.isNumeric(n) && parseFloat(n) <= l, message: FormValidation.Helper.format(a.message || FormValidation.I18n[r].lessThan["default"], o) } : { valid: t.isNumeric(n) && parseFloat(n) < l, message: FormValidation.Helper.format(a.message || FormValidation.I18n[r].lessThan.notInclusive, o) } }, _format: function (t) { return (t + "").replace(",", ".") } } }(jQuery), function (t) { FormValidation.I18n = t.extend(!0, FormValidation.I18n || {}, { en_US: { notEmpty: { "default": "Please enter a value" } } }), FormValidation.Validator.notEmpty = { enableByHtml5: function (t) { var e = t.attr("required") + ""; return "required" === e || "true" === e }, validate: function (e, i, a, s) { var n = i.attr("type"); if ("radio" === n || "checkbox" === n) { var r = e.getNamespace(); return e.getFieldElements(i.attr("data-" + r + "-field")).filter(":checked").length > 0 } if ("number" === n && i.get(0).validity && i.get(0).validity.badInput === !0) return !0; var o = e.getFieldValue(i, s); return "" !== t.trim(o) } } }(jQuery), function (t) { FormValidation.I18n = t.extend(!0, FormValidation.I18n || {}, { en_US: { numeric: { "default": "Please enter a valid float number" } } }), FormValidation.Validator.numeric = { html5Attributes: { message: "message", separator: "separator", thousandsseparator: "thousandsSeparator", decimalseparator: "decimalSeparator" }, enableByHtml5: function (t) { return "number" === t.attr("type") && void 0 !== t.attr("step") && t.attr("step") % 1 !== 0 }, validate: function (t, e, i, a) { if (this.enableByHtml5(e) && e.get(0).validity && e.get(0).validity.badInput === !0) return !1; var s = t.getFieldValue(e, a); if ("" === s) return !0; var n = i.separator || i.decimalSeparator || ".", r = i.thousandsSeparator || ""; s.substr(0, 1) === n ? s = "0" + n + s.substr(1) : s.substr(0, 2) === "-" + n && (s = "-0" + n + s.substr(2)), n = "." === n ? "\\." : n, r = "." === r ? "\\." : r; var o = new RegExp("^-?[0-9]{1,3}(" + r + "[0-9]{3})*(" + n + "[0-9]+)?$"), l = new RegExp(r, "g"); return o.test(s) ? (r && (s = s.replace(l, "")), n && (s = s.replace(n, ".")), !isNaN(parseFloat(s)) && isFinite(s)) : !1 } } }(jQuery), function (t) { FormValidation.I18n = t.extend(!0, FormValidation.I18n || {}, { en_US: { promise: { "default": "Please enter a valid value" } } }), FormValidation.Validator.promise = { priority: 999, html5Attributes: { message: "message", promise: "promise" }, validate: function (e, i, a, s) { var n = e.getFieldValue(i, s), r = new t.Deferred, o = FormValidation.Helper.call(a.promise, [n, e, i]); return o.done(function (t) { r.resolve(i, s, t) }).fail(function (t) { t = t || {}, t.valid = !1, r.resolve(i, s, t) }), r } } }(jQuery), function (t) { FormValidation.I18n = t.extend(!0, FormValidation.I18n || {}, { en_US: { regexp: { "default": "Please enter a value matching the pattern" } } }), FormValidation.Validator.regexp = { html5Attributes: { message: "message", flags: "flags", regexp: "regexp" }, enableByHtml5: function (t) { var e = t.attr("pattern"); return e ? { regexp: e } : !1 }, validate: function (t, e, i, a) { var s = t.getFieldValue(e, a); if ("" === s) return !0; var n = "string" == typeof i.regexp ? i.flags ? new RegExp(i.regexp, i.flags) : new RegExp(i.regexp) : i.regexp; return n.test(s) } } }(jQuery), function (t) { FormValidation.I18n = t.extend(!0, FormValidation.I18n || {}, { en_US: { remote: { "default": "Please enter a valid value" } } }), FormValidation.Validator.remote = { priority: 1e3, html5Attributes: { async: "async", crossdomain: "crossDomain", data: "data", datatype: "dataType", delay: "delay", message: "message", name: "name", type: "type", url: "url", validkey: "validKey" }, destroy: function (t, e, i, a) { var s = t.getNamespace(), n = e.data(s + "." + a + ".timer"); n && (clearTimeout(n), e.removeData(s + "." + a + ".timer")) }, validate: function (e, i, a, s) { function n() { var e = t.ajax(m); return e.success(function (t) { t.valid = t[h] === !0 || "true" === t[h] ? !0 : t[h] === !1 || "false" === t[h] ? !1 : null, l.resolve(i, s, t) }).error(function (t) { l.resolve(i, s, { valid: !1 }) }), l.fail(function () { e.abort() }), l } var r = e.getNamespace(), o = e.getFieldValue(i, s), l = new t.Deferred; if ("" === o) return l.resolve(i, s, { valid: !0 }), l; var d = i.attr("data-" + r + "-field"), f = a.data || {}, u = a.url, h = a.validKey || "valid"; "function" == typeof f && (f = f.call(this, e, i, o)), "string" == typeof f && (f = JSON.parse(f)), "function" == typeof u && (u = u.call(this, e, i, o)), f[a.name || d] = o; var m = { async: null === a.async || a.async === !0 || "true" === a.async, data: f, dataType: a.dataType || "json", headers: a.headers || {}, type: a.type || "GET", url: u }; return null !== a.crossDomain && (m.crossDomain = a.crossDomain === !0 || "true" === a.crossDomain), a.delay ? (i.data(r + "." + s + ".timer") && clearTimeout(i.data(r + "." + s + ".timer")), i.data(r + "." + s + ".timer", setTimeout(n, a.delay)), l) : n() } } }(jQuery), function (t) { FormValidation.I18n = t.extend(!0, FormValidation.I18n || {}, { en_US: { stringLength: { "default": "Please enter a value with valid length", less: "Please enter less than %s characters", more: "Please enter more than %s characters", between: "Please enter value between %s and %s characters long" } } }), FormValidation.Validator.stringLength = { html5Attributes: { message: "message", min: "min", max: "max", trim: "trim", utf8bytes: "utf8Bytes" }, enableByHtml5: function (e) { var i = {}, a = e.attr("maxlength"), s = e.attr("minlength"); return a && (i.max = parseInt(a, 10)), s && (i.min = parseInt(s, 10)), t.isEmptyObject(i) ? !1 : i }, validate: function (e, i, a, s) { var n = e.getFieldValue(i, s); if ((a.trim === !0 || "true" === a.trim) && (n = t.trim(n)), "" === n) return !0; var r = e.getLocale(), o = t.isNumeric(a.min) ? a.min : e.getDynamicOption(i, a.min), l = t.isNumeric(a.max) ? a.max : e.getDynamicOption(i, a.max), d = function (t) { for (var e = t.length, i = t.length - 1; i >= 0; i--) { var a = t.charCodeAt(i); a > 127 && 2047 >= a ? e++ : a > 2047 && 65535 >= a && (e += 2), a >= 56320 && 57343 >= a && i-- } return e }, f = a.utf8Bytes ? d(n) : n.length, u = !0, h = a.message || FormValidation.I18n[r].stringLength["default"]; switch ((o && f < parseInt(o, 10) || l && f > parseInt(l, 10)) && (u = !1), !0) { case !!o && !!l: h = FormValidation.Helper.format(a.message || FormValidation.I18n[r].stringLength.between, [parseInt(o, 10), parseInt(l, 10)]); break; case !!o: h = FormValidation.Helper.format(a.message || FormValidation.I18n[r].stringLength.more, parseInt(o, 10) - 1); break; case !!l: h = FormValidation.Helper.format(a.message || FormValidation.I18n[r].stringLength.less, parseInt(l, 10) + 1) } return { valid: u, message: h } } } }(jQuery), function (t) {
    FormValidation.I18n = t.extend(!0, FormValidation.I18n || {}, { en_US: { uri: { "default": "Please enter a valid URI" } } }), FormValidation.Validator.uri = {
        html5Attributes: { message: "message", allowlocal: "allowLocal", allowemptyprotocol: "allowEmptyProtocol", protocol: "protocol" }, enableByHtml5: function (t) { return "url" === t.attr("type") }, validate: function (t, e, i, a) {
            var s = t.getFieldValue(e, a); if ("" === s) return !0; var n = i.allowLocal === !0 || "true" === i.allowLocal, r = i.allowEmptyProtocol === !0 || "true" === i.allowEmptyProtocol, o = (i.protocol || "http, https, ftp").split(",").join("|").replace(/\s/g, ""), l = new RegExp("^(?:(?:" + o + ")://)" + (r ? "?" : "") + "(?:\\S+(?::\\S*)?@)?(?:" + (n ? "" : "(?!(?:10|127)(?:\\.\\d{1,3}){3})(?!(?:169\\.254|192\\.168)(?:\\.\\d{1,3}){2})(?!172\\.(?:1[6-9]|2\\d|3[0-1])(?:\\.\\d{1,3}){2})") + "(?:[1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])(?:\\.(?:1?\\d{1,2}|2[0-4]\\d|25[0-5])){2}(?:\\.(?:[1-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4]))|(?:(?:[a-z\\u00a1-\\uffff0-9]-?)*[a-z\\u00a1-\\uffff0-9]+)(?:\\.(?:[a-z\\u00a1-\\uffff0-9]-?)*[a-z\\u00a1-\\uffff0-9])*(?:\\.(?:[a-z\\u00a1-\\uffff]{2,}))" + (n ? "?" : "") + ")(?::\\d{2,5})?(?:/[^\\s]*)?$", "i");
            return l.test(s)
        }
    }
}(jQuery);